plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'application'
}

group = 'com.tghcastro.financial-portfolio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.apache.commons:commons-lang3:3.12.0'
	testImplementation 'io.rest-assured:rest-assured:5.3.1'
	testImplementation 'io.rest-assured:json-path:5.3.1'
	testImplementation 'io.rest-assured:json-schema-validator:5.3.1'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.4.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('unitTests', Test) {
	description = 'Runs unit tests'
	group = 'verification'

	filter {
		includeTestsMatching "unit.*"
	}

	shouldRunAfter test

	useJUnitPlatform()

	reports.junitXml.destination = file("$buildDir/unit-tests/xml")
	reports.html.destination = file("$buildDir/unit-tests/html")
}

tasks.register('integrationTests', Test) {
	description = 'Runs integration tests'
	group = 'verification'

	filter {
		includeTestsMatching "integration.*"
	}

	shouldRunAfter test

	useJUnitPlatform()

	reports.junitXml.destination = file("$buildDir/integration-tests/xml")
	reports.html.destination = file("$buildDir/integration-tests/html")

	testLogging {
		events "passed"
	}
}

tasks.register('componentTests', Test) {
	description = 'Runs Component tests'
	group = 'verification'

	filter {
		includeTestsMatching "component.*"
	}

	shouldRunAfter test

	useJUnitPlatform()

	reports.junitXml.destination = file("$buildDir/component-tests/xml")
	reports.html.destination = file("$buildDir/component-tests/html")

	testLogging {
		events "passed"
	}
}

application {
	mainClass = 'com.tghcastro.financialportfolio.stocksservice.StocksServiceApplication'
}
